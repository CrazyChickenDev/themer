import path from "path";
import _ from "lodash";
import { version } from "../package.json";

const packageName = "theme-themer-vscode";
const themesDirectory = "themes";
const getThemeFileName = theme => `themer-${theme}-color-theme.json`;
const getHumanTheme = theme => (theme === "dark" ? "Dark" : "Light");

export const toColorSets = colors =>
  Object.entries(colors).map(([theme, colors]) => ({
    theme,
    colors
  }));

export const render = colors => {
  const colorSets = toColorSets(colors);
  return [renderPackageJsonFile(colorSets), ...renderThemeFiles(colorSets)];
};

const renderPackageJsonFile = colorSets =>
  Promise.resolve({
    name: path.join(packageName, "package.json"),
    contents: Buffer.from(
      JSON.stringify(
        {
          name: packageName,
          displayName: "Themer VS Code Themes",
          description: "Personal theme generated by themer",
          version,
          publisher: "Themer User",
          engines: {
            vscode: "^1.14.0"
          },
          categories: ["Themes"],
          contributes: {
            themes: colorSets.map(colorSet => ({
              label: `Themer ${getHumanTheme(colorSet.theme)}`,
              uiTheme: `vs-${colorSet.theme}`,
              path: path.join(
                ".",
                themesDirectory,
                getThemeFileName(colorSet.theme)
              )
            }))
          }
        },
        null,
        2
      )
    )
  });

const renderThemeFiles = colorSets =>
  colorSets.map(colorSet =>
    Promise.resolve({
      name: path.join(
        packageName,
        themesDirectory,
        getThemeFileName(colorSet.theme)
      ),
      contents: Buffer.from(
        JSON.stringify(
          {
            name: `Themer ${getHumanTheme(colorSet.theme)}`,
            type: colorSet.theme,
            colors: {
              "editor.background": colorSet.colors.shade0,
              "editorCursor.foreground": colorSet.colors.accent6,
              "editor.foreground": colorSet.colors.shade6,
              "editorWhitespace.foreground": colorSet.colors.shade1,
              "editor.lineHighlightBackground": colorSet.colors.shade1,
              "editor.selectionBackground": colorSet.colors.shade2
            },
            tokenColors: [
              {
                settings: {
                  background: colorSet.colors.shade0,
                  foreground: colorSet.colors.shade6,
                  selectionBorder: colorSet.colors.shade5,
                  findHighlight: colorSet.colors.accent2,
                  findHighlightForeground: colorSet.colors.shade0,
                  activeGuide: colorSet.colors.accent1,
                  bracketsForeground: `${colorSet.colors.shade6}7F`,
                  bracketsOptions: "stippled_underline",
                  bracketsContentsForeground: `${colorSet.colors.shade6}7F`,
                  tagsOptions: "stippled_underline"
                }
              },
              {
                name: "Comment",
                scope: "comment",
                settings: {
                  foreground: colorSet.colors.shade2
                }
              },
              {
                name: "Constant",
                scope: "constant",
                settings: {
                  foreground: colorSet.colors.accent7
                }
              },
              {
                name: "Entity",
                scope: "entity",
                settings: {
                  foreground: colorSet.colors.accent4
                }
              },
              {
                name: "Invalid",
                scope: "invalid",
                settings: {
                  background: colorSet.colors.accent0,
                  foreground: colorSet.colors.shade1
                }
              },
              {
                name: "Keyword",
                scope: "keyword",
                settings: {
                  foreground: colorSet.colors.accent6
                }
              },
              {
                name: "Storage",
                scope: "storage",
                settings: {
                  foreground: colorSet.colors.accent7
                }
              },
              {
                name: "String",
                scope: "string",
                settings: {
                  foreground: colorSet.colors.accent3
                }
              },
              {
                name: "Support",
                scope: "support",
                settings: {
                  foreground: colorSet.colors.accent4
                }
              },
              {
                name: "Variable",
                scope: "variable",
                settings: {
                  foreground: colorSet.colors.shade7
                }
              },
              {
                name: "Markup Heading",
                scope: "markup.heading",
                settings: {
                  foreground: colorSet.colors.accent4
                }
              },
              {
                name: "Markup Deleted",
                scope: "markup.deleted",
                settings: {
                  foreground: colorSet.colors.accent0
                }
              },
              {
                name: "Markup Inserted",
                scope: "markup.inserted",
                settings: {
                  foreground: colorSet.colors.accent3
                }
              },
              {
                name: "Markup Changed",
                scope: "markup.changed",
                settings: {
                  foreground: colorSet.colors.accent2
                }
              },
              {
                name: "Markup Underline",
                scope: "markup.underline",
                settings: {
                  fontStyle: "underline"
                }
              },
              {
                name: "Markup Underline Link",
                scope: "markup.underline.link",
                settings: {
                  foreground: colorSet.colors.accent5
                }
              },
              {
                name: "Markup List",
                scope: "markup.list",
                settings: {
                  foreground: colorSet.colors.shade7
                }
              },
              {
                name: "Markup Raw",
                scope: "markup.raw",
                settings: {
                  foreground: colorSet.colors.accent7
                }
              }
            ]
          },
          null,
          2
        )
      )
    })
  );
